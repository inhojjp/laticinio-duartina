apply plugin: 'com.android.application'

android {
    namespace "br.com.duartina.laticinio"
    compileSdk rootProject.ext.compileSdkVersion
    defaultConfig {
        applicationId "br.com.duartina.laticinio"
        multiDexEnabled true
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        aaptOptions {
            // Files and dirs to omit from the packaged assets dir, modified to accommodate modern web apps.
            // Default: https://android.googlesource.com/platform/frameworks/base/+/282e181b58cf72b6ca770dc7ca5f91f135444502/tools/aapt/AaptAssets.cpp#61
            ignoreAssetsPattern '!.svn:!.git:!.ds_store:!*.scc:.*:!CVS:!thumbs.db:!picasa.ini:!*~'
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }

    // Adicionar configuração para resolver o problema de duplicação de classes
    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/*.properties'
        exclude 'META-INF/*.txt'
        exclude 'META-INF/ASL-2.0.txt'
        exclude 'META-INF/AL2.0'
        exclude 'META-INF/LGPL2.1'
        exclude 'about.html'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/services/**'
        exclude 'META-INF/INDEX.LIST'
        exclude '**.kotlin_module'
        exclude 'kotlin/**'
        exclude 'kotlinx/**'
        exclude 'okhttp3/**'
        exclude '**.properties'
        exclude 'kotlin-tooling-metadata.json'
    }
}

// Configuração para resolver conflitos de dependências
configurations.all {
    resolutionStrategy {
        force "androidx.core:core:1.8.0"
        force "androidx.lifecycle:lifecycle-runtime:2.5.1"
        force "androidx.annotation:annotation:1.5.0"
        force "org.jetbrains.kotlin:kotlin-stdlib:1.7.20"
        force "androidx.appcompat:appcompat:1.5.0"
        force "androidx.fragment:fragment:1.5.0"
    }

    // Evitar duplicações específicas
    exclude group: 'org.jetbrains.kotlin', module: 'kotlin-stdlib-jdk8'
}

//repositories {
//    flatDir{
//        dirs '../capacitor-cordova-android-plugins/src/main/libs', 'libs'
//    }
//}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "androidx.appcompat:appcompat:$androidxAppCompatVersion"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$androidxCoordinatorLayoutVersion"
    implementation "androidx.core:core-splashscreen:$coreSplashScreenVersion"
    implementation "androidx.multidex:multidex:2.0.1"
    //implementation 'com.capacitorjs:core:latest.release'
    //implementation 'com.capacitorjs:android:latest.release'
    testImplementation "junit:junit:$junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$androidxJunitVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxEspressoCoreVersion"
    // implementation project(':capacitor-cordova-android-plugins')
}

// Comentando a linha problemática que faz referência a um arquivo inexistente
// apply from: 'capacitor.build.gradle'

try {
    def servicesJSON = file('google-services.json')
    if (servicesJSON.text) {
        apply plugin: 'com.google.gms.google-services'
    }
} catch(Exception e) {
    logger.info("google-services.json not found, google-services plugin not applied. Push Notifications won't work")
}